name: build

on:
  pull_request:
  push:
    branches: ["*"]
    tags-ignore:
      - "**"

jobs:
  check:
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: "-D warnings"
      RUSTDOCFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: check-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: check-${{ runner.os }}-cargo

      # Calling rustup show will install the toolchain in rust-toolchain
      - name: Install toolchain
        id: rustup
        run: rustup show

      - name: Fetch dependencies
        run: cargo fetch

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo check
        run: cargo check --all-features
          
      - name: Run cargo clippy
        run: cargo clippy --all-features
      
      # Verify broken doc links
      - name: Run cargo doc
        run: cargo doc --all-features --no-deps

  test:
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
          - runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: test-${{ runner.os }}-cargo
          
      - name: Install toolchain
        run: rustup show

      # Run tests
      - name: Run tests
        run: |
          cargo test

      # - name: Upload coverage to codecov.io
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: coverage/info.lcov
      #     fail_ci_if_error: false # upload can randomly fail, see https://github.com/codecov/codecov-action/issues/557
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     verbose: true

  build:
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            runs-on: ubuntu-latest
          - name: Windows
            runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: build-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: build-${{ runner.os }}-cargo

      - name: Setup Rust cache
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: build-${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: build-${{ runner.os }}-rust

      - name: Install toolchain
        run: rustup show

      - name: Build binary
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: |
            target/release/quickssh
            target/release/quickssh.exe
